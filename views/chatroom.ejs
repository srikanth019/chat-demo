<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <title>ChatCat - <%= room %></title>
    <link rel="stylesheet" href="/css/chatRoom.css" />
    <script src="/socket.io/socket.io.js"></script>
    <!-- <script src="/babel.min.js"></script> -->
  </head>
  <body>
    <div class="container">
      <div class="titlePanel">
        <h1>ChatCAT | <%= room %></h1>
      </div>
      <div class="controls">
        <div class="userPicHolder">
          <img src="<%= user.profilePicture %>" alt="<%= user.FullName %>" />
        </div>
        <p class="userName"><%= user.FullName %></p>
        <a href="/rooms" id="roomsBtn">Rooms</a>
        <a href="/logout" id="logOutBtn">Logout</a>
      </div>
      <div class="chatListDiv">
        <div class="chatMessagesPanel">
          <div class="chatMessages" id="chatMessages"></div>
          <div class="typePanel">
            <input
              type="text"
              name="userInput"
              id="userInput"
              placeholder="Type here and press enter"
            />
            <a href="#" id="uploadFile" class="fileUploadBtn">Photo</a>
          </div>
        </div>
        <div class="chatUsers" id="chatUsers"></div>
      </div>
    </div>
    <script>
      document.addEventListener("DOMContentLoaded", () => {
        const socket = io("<%= host %>/chatter");
        const roomId = "<%= roomId %>";
        const userName = "<%= user.FullName %>";
        const userPic = "<%= user.profilePicture %>";
        const userId = "<%= user._id %>";

        socket.on("connect", () => {
          socket.emit(
            "join",
            {
              roomId,
              userName,
              userPic,
            },
            (error) => {
              if (error) {
                alert(error);
                location.href = "/rooms";
              }
            }
          );
        });

        const usersList = (user) => {
          return `<div class="userBlock">
            <div class="userPic">
              <img src="${user.userPic}" alt="${user.userName}" />
            </div>
            <div class="cuserName">${user.userName}</div>
          </div>`;
        };

        socket.on("updateUsersList", (data) => {
          const parsedData = JSON.parse(data);
          const usersListEl = document.querySelector("#chatUsers");

          // Check if usersListEl is not null
          if (usersListEl) {
            usersListEl.innerHTML = "";
            parsedData.forEach((user) => {
              usersListEl.innerHTML += usersList(user);
            });
          } else {
            console.error("Element with id 'chatUsers' not found in the DOM.");
          }
        });

        const userInputEl = document.querySelector("#userInput");

        userInputEl.addEventListener("keypress", (event) => {
          if (event.key === "Enter") {
            const message = userInputEl.value.trim();
            if (message) {
              socket.emit("sendMessage", {
                message,
                userName,
                userPic,
                roomId,
                userId,
              });
              userInputEl.value = "";
            }
          }
        });

        const chatMessagesEl = document.querySelector("#chatMessages");

        const createChatBlock = (message, userPic, userName) => {
          return `<div class="chatBlock">
            <div class="userPic">
              <img src="${userPic}" alt="${userName}" />
            </div>
            <div class="chatMsg">${message}</div>
          </div>`;
        };

        socket.on("message", (data) => {
          const { message, userName, userPic, userId } = JSON.parse(data);
          const isSentByCurrentUser = userId === "<%= user._id %>";
          chatMessagesEl.innerHTML += createChatBlock(
            message,
            userPic,
            userName
          );
          chatMessagesEl.scrollTop = chatMessagesEl.scrollHeight; // Scroll to bottom
        });
      });
    </script>
  </body>
</html>
